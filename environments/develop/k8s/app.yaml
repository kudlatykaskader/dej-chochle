---
###
# BACKEND DEPLOYMENT + SERVICE
###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: pd-dev-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      initContainers:
        - name: migrate
          imagePullPolicy: Always
          image: ghcr.io/warehog/podej-dalej/pd-backend:dev-20250127-37-984b35e
          command: ["/bin/sh", "-c"]
          args: ["env && bundle exec rails db:migrate"]
          env:
            - name: RAILS_ENV
              value: development
            - name: DB_ADAPTER
              value: postgresql
            - name: DB_HOST
              value: db
            - name: DB_USER
              value: db_user
            - name: DB_PASS
              value: db_pass
            - name: DB_NAME
              value: db_name
      containers:
        - name: backend
          imagePullPolicy: Always
          image: ghcr.io/warehog/podej-dalej/pd-backend:dev-20250127-37-984b35e
          env:
            - name: RAILS_ENV
              value: development
            - name: DB_ADAPTER
              value: postgresql
            - name: DB_HOST
              value: db
            - name: DB_USER
              value: db_user
            - name: DB_PASS
              value: db_pass
            - name: DB_NAME
              value: db_name
            - name: STORAGE_SERVICE
              value: minio
            - name: MINIO_BUCKET
              value: default
            - name: MINIO_ENDPOINT
              value: http://minio:9000
            - name: MINIO_ACCESS_KEY_ID
              value: administrator
            - name: MINIO_SECRET_ACCESS_KEY
              value: administrator
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: pd-dev-ns
spec:
  selector:
    app: backend
  ports:
    - name: http
      protocol: TCP
      port: 3000
      targetPort: 3000

---
###
# FRONTEND DEPLOYMENT + SERVICE
###
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: pd-dev-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: ghcr.io/warehog/podej-dalej/pd-frontend:dev-20250127-37-984b35e
          imagePullPolicy: Always
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: pd-dev-ns
spec:
  selector:
    app: frontend
  type: ClusterIP
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80

